statement -> declaration statement | declaration
expression -> term + expression  | term - expression | term
term -> factor * term | factor / term | factor
factor -> integer | variable | "(" expression ")" | id(e1, e2, e3, ..., en)

declaration -> function_declaration | assignment
assignment -> "int" variable ":=" expression ";" {add var to symtab}

function_declaration -> "def" ident "(" args ")" "{" expression "}"

args -> ident, args | ident

evaluate(ast)

1 + 2 + 3

1, 2 +

a+(b-c*(d+g)*(f-k)) - r
